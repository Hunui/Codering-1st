<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mypage_tutoring">

	<!-- 진행중 튜터링 리스트 -->
	<select id="ingList" parameterType="hashmap"
		resultType="hashmap">
	<![CDATA[
	SELECT
		   TUTORING_TUTOR.THUMBNAIL_PATH
    	 , TUTORING_TUTOR.TITLE
    	 , TO_CHAR(TUTORING_TUTOR.START_DATE,'YYYY-MM-DD') AS START_DATE
    	 , TUTORING_TUTOR.TUTORING_TUTOR_ID
    	 , TUTORING_TUTOR.TUTOR_ID
     	 , TRUNC(ENTIRE_PERIOD/7) AS WEEK_PERIOD
     	 , TE.PROF_PATH
         , (SELECT
     		 	 COUNT(*)
			FROM
				 TUTORING_ENROLL
			WHERE
				 TUTORING_TUTOR_ID = TUTORING_TUTOR.TUTORING_TUTOR_ID) -
     	  (SELECT
     	  		 COUNT(*) 
           FROM 
           		TUTORING_DROP TD JOIN TUTORING_ENROLL TE ON TD.ENROLL_ID = TE.ENROLL_ID
                                 JOIN TUTORING_TUTOR TT ON TT.TUTORING_TUTOR_ID = TE.TUTORING_TUTOR_ID
           WHERE
           		 TT.TUTORING_TUTOR_ID = TUTORING_TUTOR.TUTORING_TUTOR_ID) AS COUNT_TUTORING
         , (SELECT COUNT(*) FROM TUTORING_DROP TD WHERE TD.ENROLL_ID = TUTORING_ENROLL.ENROLL_ID ) AS AMIDROP
         , TUTORING_DROP.REQUEST_ID
         , TUTORING_DROP.TARGET_ID
	FROM TUTORING_TUTOR JOIN TUTORING_ENROLL ON TUTORING_ENROLL.TUTORING_TUTOR_ID = TUTORING_TUTOR.TUTORING_TUTOR_ID
     	                LEFT JOIN TUTORING_DROP ON TUTORING_ENROLL.ENROLL_ID=TUTORING_DROP.ENROLL_ID
         	            JOIN TUTEE          ON TUTEE.MEMBER_ID=TUTORING_ENROLL.MEMBER_ID
             	        JOIN TUTOR_INFO     ON TUTOR_INFO.TUTOR_ID = TUTORING_TUTOR.TUTOR_ID
  	            	    JOIN TUTEE TE       ON TUTOR_INFO.MEMBER_ID = TE.MEMBER_ID
	WHERE
		 (TUTEE.MEMBER_ID=#{MEMBER_ID} AND (START_DATE<SYSDATE AND START_DATE+ENTIRE_PERIOD>SYSDATE)) AND TUTORING_TUTOR.PROGRESS_ID!=5 AND TUTORING_DROP.REQUEST_ID IS NULL
	ORDER BY START_DATE
	]]>
	</select>

	<!-- 이전 튜터링 리스트 -->
	<select id="beforeList" parameterType="hashmap"
		resultType="hashmap">
	<![CDATA[
	SELECT
		  TUTORING_TUTOR.THUMBNAIL_PATH
    	, TUTORING_TUTOR.TITLE
    	, TO_CHAR(TUTORING_TUTOR.START_DATE,'YYYY-MM-DD') AS START_DATE
    	, TUTORING_TUTOR.TUTORING_TUTOR_ID
    	, TUTORING_TUTOR.TUTOR_ID
     	, TRUNC(ENTIRE_PERIOD/7) AS WEEK_PERIOD
     	, TE.PROF_PATH
        , (SELECT
     		 	 COUNT(*)
			FROM
				 TUTORING_ENROLL
			WHERE
				 TUTORING_TUTOR_ID = TUTORING_TUTOR.TUTORING_TUTOR_ID) -
     	  (SELECT
     	  		 COUNT(*) 
           FROM 
           		TUTORING_DROP TD JOIN TUTORING_ENROLL TE ON TD.ENROLL_ID = TE.ENROLL_ID
                                 JOIN TUTORING_TUTOR TT ON TT.TUTORING_TUTOR_ID = TE.TUTORING_TUTOR_ID
           WHERE TT.TUTORING_TUTOR_ID = TUTORING_TUTOR.TUTORING_TUTOR_ID) AS COUNT_TUTORING
        , (SELECT COUNT(*) FROM TUTORING_DROP TD WHERE TD.ENROLL_ID = TUTORING_ENROLL.ENROLL_ID ) AS AMIDROP
        , TUTORING_DROP.REQUEST_ID
        , TUTORING_DROP.TARGET_ID
        , (SELECT COUNT(*) FROM TUTOR_REVIEW WHERE ENROLL_ID=TUTORING_ENROLL.ENROLL_ID) AS COUNT_REVIEW
	FROM TUTORING_TUTOR JOIN TUTORING_ENROLL    ON TUTORING_ENROLL.TUTORING_TUTOR_ID = TUTORING_TUTOR.TUTORING_TUTOR_ID
    	                LEFT JOIN TUTORING_DROP ON TUTORING_ENROLL.ENROLL_ID=TUTORING_DROP.ENROLL_ID
        	            LEFT JOIN TUTEE         ON TUTEE.MEMBER_ID=TUTORING_ENROLL.MEMBER_ID
            	        JOIN TUTOR_INFO         ON TUTOR_INFO.TUTOR_ID = TUTORING_TUTOR.TUTOR_ID
                	    JOIN TUTEE TE           ON TUTOR_INFO.MEMBER_ID = TE.MEMBER_ID
	WHERE (TUTEE.MEMBER_ID=#{MEMBER_ID} AND START_DATE+ENTIRE_PERIOD<SYSDATE) OR (TUTEE.MEMBER_ID=#{MEMBER_ID} AND TUTORING_TUTOR.PROGRESS_ID=5) OR (TUTEE.MEMBER_ID=#{MEMBER_ID} AND TUTORING_DROP.REQUEST_ID IS NOT NULL)
	ORDER BY START_DATE
	]]>
	</select>

	<!-- 모집 중 리스트 -->
	<select id="afterList" parameterType="hashmap"
		resultType="hashmap">
	<![CDATA[
	SELECT
		  TUTORING_TUTOR.THUMBNAIL_PATH
    	, TUTORING_TUTOR.TITLE
    	, TO_CHAR(TUTORING_TUTOR.START_DATE,'YYYY-MM-DD') AS START_DATE
    	, TUTORING_TUTOR.TUTORING_TUTOR_ID
    	, TUTORING_TUTOR.TUTOR_ID
     	, TRUNC(ENTIRE_PERIOD/7) AS WEEK_PERIOD
     	, TE.PROF_PATH
        , (SELECT
     		 	 COUNT(*)
			FROM
				 TUTORING_ENROLL
			WHERE
				 TUTORING_TUTOR_ID = TUTORING_TUTOR.TUTORING_TUTOR_ID) -
     	  (SELECT
     	  		 COUNT(*) 
           FROM 
           		TUTORING_DROP TD JOIN TUTORING_ENROLL TE ON TD.ENROLL_ID = TE.ENROLL_ID
                                 JOIN TUTORING_TUTOR TT ON TT.TUTORING_TUTOR_ID = TE.TUTORING_TUTOR_ID
           WHERE TT.TUTORING_TUTOR_ID = TUTORING_TUTOR.TUTORING_TUTOR_ID) AS COUNT_TUTORING
        , (SELECT COUNT(*) FROM TUTORING_DROP TD WHERE TD.ENROLL_ID = TUTORING_ENROLL.ENROLL_ID ) AS AMIDROP
        , TUTORING_DROP.REQUEST_ID
        , TUTORING_DROP.TARGET_ID
        
	FROM TUTORING_TUTOR JOIN TUTORING_ENROLL    ON TUTORING_ENROLL.TUTORING_TUTOR_ID = TUTORING_TUTOR.TUTORING_TUTOR_ID
    	                LEFT JOIN TUTORING_DROP ON TUTORING_ENROLL.ENROLL_ID=TUTORING_DROP.ENROLL_ID
        	            LEFT JOIN TUTEE         ON TUTEE.MEMBER_ID=TUTORING_ENROLL.MEMBER_ID
            	        JOIN TUTOR_INFO         ON TUTOR_INFO.TUTOR_ID = TUTORING_TUTOR.TUTOR_ID
                	    JOIN TUTEE TE           ON TUTOR_INFO.MEMBER_ID = TE.MEMBER_ID
	WHERE
    	TUTEE.MEMBER_ID=#{MEMBER_ID} AND START_DATE>SYSDATE AND PROGRESS_ID!=5 AND TUTORING_DROP.REQUEST_ID IS NULL
	ORDER BY START_DATE
	]]>
	</select>


	<!-- 상세 페이지 튜터링 정보 부분 -->
	<!-- 튜터링 썸네일, 튜터 프사, 진행중 인원수, 튜터링명, 시작일, 몇주과정 -->
	<select id="detail1" parameterType="hashmap"
		resultType="hashmap">
	<![CDATA[
	SELECT
		   TUTEE.MEMBER_ID
		 , TUTORING_ENROLL.TUTORING_TUTOR_ID
		 , TUTORING_TUTOR.TUTOR_ID
		 , TUTORING_ENROLL.ENROLL_ID
    	 , (SELECT
    	 		 T.PROF_PATH
        	FROM
        		 TUTEE T, TUTOR_INFO
        	WHERE
        		 TUTORING_TUTOR.TUTOR_ID = TUTOR_INFO.TUTOR_ID
        		 AND TUTOR_INFO.MEMBER_ID = T.MEMBER_ID) AS TUTOR_PROF
    	, TUTORING_TUTOR.TITLE
    	, TUTORING_TUTOR.THUMBNAIL_PATH
    	, TUTORING_TUTOR.TUTOR_ID
    	, (SELECT
        	        COUNT(*)
         	FROM
            	 TUTORING_ENROLL
         	WHERE
            	 TUTORING_TUTOR_ID = TUTORING_TUTOR.TUTORING_TUTOR_ID) - 
          (SELECT
                 COUNT(*) 
           FROM 
                 TUTORING_DROP TD JOIN TUTORING_ENROLL TE ON TD.ENROLL_ID = TE.ENROLL_ID
                                  JOIN TUTORING_TUTOR TT ON TT.TUTORING_TUTOR_ID = TE.TUTORING_TUTOR_ID
           WHERE TT.TUTORING_TUTOR_ID = TUTORING_TUTOR.TUTORING_TUTOR_ID) AS COUNT_TUTORING
		, TO_CHAR(TUTORING_TUTOR.START_DATE,'YYYY-MM-DD') AS START_DATE
		, (TUTORING_TUTOR.ENTIRE_PERIOD/7) AS WEEK_PERIOD
	FROM
 		 TUTEE, TUTORING_ENROLL, TUTORING_TUTOR
    WHERE
   		 TUTEE.MEMBER_ID=#{MEMBER_ID} AND TUTORING_TUTOR.TUTORING_TUTOR_ID=#{TUTORING_TUTOR_ID}
  		   AND TUTEE.MEMBER_ID=TUTORING_ENROLL.MEMBER_ID
		   AND TUTORING_ENROLL.TUTORING_TUTOR_ID = TUTORING_TUTOR.TUTORING_TUTOR_ID
	]]>
	</select>

	<!-- 일정정보 -->
	<select id="schedule" parameterType="hashmap"
		resultType="hashmap">
	<![CDATA[
	SELECT TUTORING_SCHEDULE.SCH_TAKE
     , TUTORING_SCHEDULE.SCH_ID
     , TUTORING_SCHEDULE.WRITEDATE
     , TUTORING_SCHEDULE.SCH_LOCATION
     , TUTORING_SCHEDULE.SCH_LAT
     , TUTORING_SCHEDULE.SCH_LONG
     , TO_CHAR(TUTORING_SCHEDULE.SCH_DATE,'YYYY-MM-DD HH24:MI') AS SCH_DATE
	FROM TUTORING_SCHEDULE LEFT JOIN TUTORING_TUTOR     ON TUTORING_TUTOR.TUTORING_TUTOR_ID=TUTORING_SCHEDULE.TUTORING_TUTOR_ID
	WHERE TUTORING_TUTOR.TUTORING_TUTOR_ID=#{TUTORING_TUTOR_ID}
	ORDER BY SCH_TAKE DESC
	]]>
	</select>

	<!-- 자기 후기 프린트 -->
	<select id="myreview" parameterType="hashmap"
		resultType="hashmap">
	<![CDATA[
	SELECT
		   TUTEE.PROF_PATH
		 , TUTEE.NICKNAME
		 , TO_CHAR(TUTOR_REVIEW.WRITEDATE,'YYYY-MM-DD HH24:MI') AS WRITEDATE
		 , TUTOR_REVIEW.REVIEW_GRADE
		 , TUTOR_REVIEW.CONTENT
		 
	FROM
		 TUTORING_TUTOR LEFT JOIN TUTORING_ENROLL ON TUTORING_TUTOR.TUTORING_TUTOR_ID=TUTORING_ENROLL.TUTORING_TUTOR_ID
                	     JOIN TUTOR_REVIEW    ON TUTORING_ENROLL.ENROLL_ID = TUTOR_REVIEW.ENROLL_ID
         	            LEFT JOIN TUTEE              ON TUTEE.MEMBER_ID=TUTORING_ENROLL.MEMBER_ID
	WHERE
		 TUTORING_TUTOR.TUTORING_TUTOR_ID=#{TUTORING_TUTOR_ID} AND TUTORING_ENROLL.MEMBER_ID=#{MEMBER_ID}
	]]>
	</select>

	<!-- 후기 입력 -->
	<select id="insertReview" parameterType="hashmap"
		resultType="hashmap">
	<![CDATA[
	INSERT INTO
		 TUTOR_REVIEW
		 (
		   	  REVIEW_ID
		 	, ENROLL_ID
		 	, REVIEW_GRADE
		 	, CONTENT
		 	, WRITEDATE
		 ) 
	VALUES
		(
			  TUTOR_REVIEW_SEQ.NEXTVAL
			, #{ENROLL_ID}
			, #{REVIEW_GRADE}
			, #{CONTENT}
			, SYSDATE
	)
	]]>
	</select>

	<!-- 예약튜터링 리스트 -->
	<select id="reserveList" parameterType="hashmap"
		resultType="hashmap">
	<![CDATA[
	SELECT
		TR.RESERVATION_ID
    	, TUTORING_TUTEE.TUTORING_TUTEE_ID
    	, TUTEE.MEMBER_ID
    	, (TRUNC(SYSDATE-TUTORING_TUTEE.DEADLINE)) AS DEADLINE
    	, TUTORING_TUTEE.TUTORING_TITLE
    	, (SELECT COUNT(*) FROM TUTORING_TUTOR TT WHERE TT.TUTORING_TUTEE_ID = TUTORING_TUTEE.TUTORING_TUTEE_ID) AS OPENTUTORING
    	, (SELECT COUNT(*) FROM TUTORING_TUTEE TT WHERE TT.TUTORING_TUTEE_ID=TR.TUTORING_TUTEE_ID) AS COUNT_RESERV
    	, TUTORING_TUTEE.MIN_NUM
    	, TUTORING_TUTEE.MAX_NUM
    	, (ROUND(ENTIRE_PERIOD/7)) AS WEEK_PERIOD
    	, (TRUNC(SYSDATE-(SELECT TT.START_DATE FROM TUTORING_TUTOR TT WHERE TT.TUTORING_TUTEE_ID = TUTORING_TUTEE.TUTORING_TUTEE_ID))) AS TUTORINGOPENDATE
	FROM
		 TUTORING_RESERVATION TR LEFT JOIN TUTEE       ON TR.MEMBER_ID=TUTEE.MEMBER_ID
        		                  JOIN TUTORING_TUTEE   ON TR.TUTORING_TUTEE_ID=TUTORING_TUTEE.TUTORING_TUTEE_ID
	WHERE (TUTEE.MEMBER_ID=#{MEMBER_ID} AND TUTORING_TUTEE.DEADLINE>SYSDATE AND (SELECT COUNT(*) FROM TUTORING_TUTOR TT WHERE TT.TUTORING_TUTEE_ID = TUTORING_TUTEE.TUTORING_TUTEE_ID)=1)
   	   OR (TUTEE.MEMBER_ID=#{MEMBER_ID} AND TUTORING_TUTEE.DEADLINE>SYSDATE AND (SELECT COUNT(*) FROM TUTORING_TUTOR TT WHERE TT.TUTORING_TUTEE_ID = TUTORING_TUTEE.TUTORING_TUTEE_ID)=0)
       OR (TUTEE.MEMBER_ID=#{MEMBER_ID} AND TUTORING_TUTEE.DEADLINE<SYSDATE AND (SELECT COUNT(*) FROM TUTORING_TUTOR TT WHERE TT.TUTORING_TUTEE_ID = TUTORING_TUTEE.TUTORING_TUTEE_ID)=1 AND (SELECT TT.START_DATE FROM TUTORING_TUTOR TT WHERE TT.TUTORING_TUTEE_ID = TUTORING_TUTEE.TUTORING_TUTEE_ID)>SYSDATE)
	]]>
	</select>

	<!-- 예약튜터링 예약취소 버튼 -->
	<delete id="cancelReserve" parameterType="hashmap">
	<![CDATA[
	DELETE
	FROM TUTORING_RESERVATION
	WHERE RESERVATION_ID=#{RESERVATION_ID}
	]]>
	</delete>

	<!-- 중도포기 버튼 -->
	<insert id="tuteedrop" parameterType="hashMap">
		INSERT INTO
		TUTORING_DROP
		(
		DROP_ID
		, ENROLL_ID
		, REQUEST_ID
		, DROP_DATE
		)
		VALUES
		(
		TUTORING_DROP_SEQ.nextval
		, #{ENROLL_ID}
		, 1
		, SYSDATE
		)

	</insert>

	<!-- 찜한 튜터링 리스트 -->
	<select id="pickList" parameterType="hashmap"
		resultType="hashmap">
	<![CDATA[
	SELECT  TUTORING_TUTOR.THUMBNAIL_PATH
    	 , TUTORING_TUTOR.TITLE
    	 , TO_CHAR(TUTORING_TUTOR.START_DATE,'YYYY-MM-DD') AS START_DATE
    	 , TUTORING_TUTOR.TUTORING_TUTOR_ID
    	 , TUTORING_TUTOR.TUTOR_ID
     	 , (ENTIRE_PERIOD/7) AS WEEK_PERIOD
     	 , TUTORING_TUTOR.MIN_NUM
         , TUTORING_TUTOR.MAX_NUM
         , (SELECT
    	 		 T.PROF_PATH
        	FROM
        		 TUTEE T, TUTOR_INFO
        	WHERE
        		 TUTORING_TUTOR.TUTOR_ID = TUTOR_INFO.TUTOR_ID
        		 AND TUTOR_INFO.MEMBER_ID = T.MEMBER_ID) AS TUTOR_PROF
         , (SELECT
     		 	 COUNT(*)
			FROM
				 TUTORING_ENROLL
			WHERE
				 TUTORING_TUTOR_ID = TUTORING_TUTOR.TUTORING_TUTOR_ID) -
     	  (SELECT
     	  		 COUNT(*) 
           FROM 
           		TUTORING_DROP TD JOIN TUTORING_ENROLL TE ON TD.ENROLL_ID = TE.ENROLL_ID
                                 JOIN TUTORING_TUTOR TT ON TT.TUTORING_TUTOR_ID = TE.TUTORING_TUTOR_ID
           WHERE
           		 TT.TUTORING_TUTOR_ID = TUTORING_TUTOR.TUTORING_TUTOR_ID) AS COUNT_TUTORING
		   FROM TUTORING_LIKE JOIN TUTORING_TUTOR ON TUTORING_TUTOR.TUTORING_TUTOR_ID=TUTORING_LIKE.TUTORING_TUTOR_ID
                   JOIN TUTEE       ON TUTORING_LIKE.MEMBER_ID=TUTEE.MEMBER_ID
			WHERE TUTEE.MEMBER_ID=#{MEMBER_ID}
	]]>
	</select>

	


</mapper>